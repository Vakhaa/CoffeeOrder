{"version":3,"sources":["Components/Header/Header.js","Redux/Actions/actionTypes.js","DAL/Firebase/index.js","Redux/Actions/orderAction.js","Redux/Actions/loginAction.js","Containers/HeaderContainer.js","Components/Menu/Menu.js","Redux/Actions/productAction.js","Redux/Actions/productsAction.js","Containers/MenuContainer.js","Components/Order/Order.js","Containers/OrderContainer.js","Components/App.js","Containers/AppContainer.js","Redux/Reducers/loginReducer.js","Redux/Reducers/orderReducer.js","Redux/Reducers/productReducer.js","Redux/Reducers/productsReducer.js","Redux/Reducers/index.js","index.js","Redux/Store/index.js"],"names":["Header","name","onClick","className","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_ERROR","LOGOUT_REQUEST","LOGOUT_RECEIVE","LOGOUT_ERROR","GET_PRODUCTS_REQUEST","GET_PRODUCTS_RECEIVE","GET_PRODUCTS_ERROR","ADD_PRODUCT_TO_ORDER_REQUEST","ADD_PRODUCT_TO_ORDER_RECEIVE","ADD_PRODUCT_TO_ORDER_ERROR","DELETE_PRODUCT_FROM_ORDER_REQUEST","DELETE_PRODUCT_FROM_ORDER_RECEIVE","DELETE_PRODUCT_FROM_ORDER_ERROR","CHANGE_COUNT_PRODUCT_INTO_ORDER_REQUEST","CHANGE_COUNT_PRODUCT_INTO_ORDER_RECEIVE","CHANGE_COUNT_PRODUCT_INTO_ORDER_ERROR","GET_ORDER_REQUEST","GET_ORDER_RECEIVE","GET_ORDER_ERROR","CREATE_ORDER","ORDER_EXISTS","CLEAN_ORDER","CANCEL_ORDER_REQUEST","CANCEL_ORDER_RECEIVE","CANCEL_ORDER_ERROR","SUBMIT_ORDER_REQUEST","SUBMIT_ORDER_RECEIVE","SUBMIT_ORDER_ERROR","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","storage","errorGetOrder","error","type","errorCancelOrder","errorSubmitOrder","createOrder","userId","dispatch","order","db","ref","on","snapOrders","orderByChild","equalTo","once","snap","val","newOrder","isSubmit","set","getOrder","a","productsSnap","data","Products","map","productOrder","find","product","productId","id","count","provider","auth","GoogleAuthProvider","compose","connect","state","profile","login","signInWithPopup","response","additionalUserInfo","item","logout","signOut","props","Menu","products","addProduct","isEditMode","title","price","disabled","isInOrder","errorAddProduct","errorDeleteProduct","errorChangeProductCount","deleteProduct","key","snapProducts","newProducts","filter","errorProducts","newProduct","child","getProducts","elem","useState","isLogin","setIsLogin","setProducts","useEffect","orderProduct","Order","changeCount","totalPrice","cancelOrder","submitOrder","jsonString","JSON","stringify","console","log","blob","Blob","put","remove","isIncreased","oldProducts","currentProduct","updateProducts","changeProductCountIntoOrder","setOrder","setTotalPrice","total","onMouseEnter","alert","App","AppContainer","initialState","rootReducer","combineReducers","action","store","loggerMiddleware","createLogger","createStore","applyMiddleware","thunkMiddleware","configureStore","window","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a7efce3.chunk.js","sourcesContent":["import '../../index.css';\n\nlet Header = ({ name, onClick }) => {\n  return (\n      <div className=\"Header container \">\n          <div>\n              {name ? name : \"You are guest. Please, log in.\"}\n          </div>\n          <button onClick={() => onClick()}>\n              {name ? \"Log out\":  \"Log in\"}\n          </button>\n    </div>\n  );\n}\n\nexport default Header;\n","export const LOGIN_REQUEST = \"LOGIN_REQUEST\"\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\r\nexport const LOGIN_ERROR = \"LOGIN_ERROR\"\r\n\r\nexport const LOGOUT_REQUEST = \"LOGOUT_REQUEST\"\r\nexport const LOGOUT_RECEIVE = \"LOGOUT_RECEIVE\"\r\nexport const LOGOUT_ERROR = \"LOGOUT_ERROR\"\r\n\r\nexport const GET_PRODUCTS_REQUEST = \"GET_PRODUCTS_REQUEST\" \r\nexport const GET_PRODUCTS_RECEIVE = \"GET_PRODUCTS_RECEIVE\" \r\nexport const GET_PRODUCTS_ERROR = \"GET_PRODUCTS_ERROR\" \r\n\r\nexport const ADD_PRODUCT_TO_ORDER_REQUEST = \"ADD_PRODUCT_TO_ORDER_REQUEST\"\r\nexport const ADD_PRODUCT_TO_ORDER_RECEIVE = \"ADD_PRODUCT_TO_ORDER_RECEIVE\"\r\nexport const ADD_PRODUCT_TO_ORDER_ERROR = \"ADD_PRODUCT_TO_ORDER_ERROR\"\r\n\r\nexport const DELETE_PRODUCT_FROM_ORDER_REQUEST = \"DELETE_PRODUCT_FROM_ORDER_REQUEST\"\r\nexport const DELETE_PRODUCT_FROM_ORDER_RECEIVE = \"DELETE_PRODUCT_FROM_ORDER_RECEIVE\"\r\nexport const DELETE_PRODUCT_FROM_ORDER_ERROR = \"DELETE_PRODUCT_FROM_ORDER_ERROR\"\r\n\r\nexport const CHANGE_COUNT_PRODUCT_INTO_ORDER_REQUEST = \"CHANGE_COUNT_PRODUCT_INTO_ORDER_REQUEST\"\r\nexport const CHANGE_COUNT_PRODUCT_INTO_ORDER_RECEIVE = \"CHANGE_COUNT_PRODUCT_INTO_ORDER_RECEIVE\"\r\nexport const CHANGE_COUNT_PRODUCT_INTO_ORDER_ERROR = \"CHANGE_COUNT_PRODUCT_INTO_ORDER_ERROR\"\r\n\r\nexport const GET_ORDER_REQUEST = \"GET_ORDER_REQUEST\"\r\nexport const GET_ORDER_RECEIVE = \"GET_ORDER_RECEIVE\"\r\nexport const GET_ORDER_ERROR = \"GET_ORDER_ERROR\" \r\n\r\nexport const CREATE_ORDER = \"CREATE_ORDER\" \r\nexport const ORDER_EXISTS = \"ORDER_EXISTS\" \r\nexport const CLEAN_ORDER = \"CLEAN_ORDER\" \r\n\r\nexport const CANCEL_ORDER_REQUEST = \"CANCEL_ORDER_REQUEST\"\r\nexport const CANCEL_ORDER_RECEIVE = \"CANCEL_ORDER_RECEIVE\"\r\nexport const CANCEL_ORDER_ERROR = \"CANCEL_ORDER_ERROR\"\r\n\r\nexport const SUBMIT_ORDER_REQUEST = \"SUBMIT_ORDER_REQUEST\"\r\nexport const SUBMIT_ORDER_RECEIVE = \"SUBMIT_ORDER_RECEIVE\"\r\nexport const SUBMIT_ORDER_ERROR = \"SUBMIT_ORDER_ERROR\"\r\n\r\n","import firebase from 'firebase/app';\r\nimport \"firebase/database\";\r\nimport \"firebase/storage\";\r\n\r\n\r\nvar config = {\r\n    apiKey: \"AIzaSyCrrzay9q_ebYMNUv3PvZFkbH0QjJNuGcM\",\r\n    authDomain: \"coffeeorder-4f01e.firebaseapp.com\",\r\n    databaseURL: \"https://coffeeorder-4f01e-default-rtdb.europe-west1.firebasedatabase.app\",\r\n    projectId: \"coffeeorder-4f01e\",\r\n    storageBucket: \"coffeeorder-4f01e.appspot.com\",\r\n    messagingSenderId: \"147709475008\",\r\n    appId: \"1:147709475008:web:6931eaacdab46d56c51525\"\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const database = firebase.database();\r\n\r\nexport const storage = firebase.storage();","import {\r\n    GET_ORDER_REQUEST,\r\n    GET_ORDER_RECEIVE,\r\n    GET_ORDER_ERROR,\r\n\r\n    CANCEL_ORDER_REQUEST,\r\n    CANCEL_ORDER_RECEIVE,\r\n    CANCEL_ORDER_ERROR,\r\n\r\n    SUBMIT_ORDER_REQUEST,\r\n    SUBMIT_ORDER_RECEIVE,\r\n    SUBMIT_ORDER_ERROR,\r\n\r\n    CLEAN_ORDER,\r\n    CREATE_ORDER,\r\n    ORDER_EXISTS\r\n}\r\n    from './actionTypes'\r\n\r\nimport { database as db}  from '../../DAL/Firebase';\r\nimport { storage } from '../../DAL/Firebase/index';\r\n\r\nexport function cleanOrder() {\r\n    return {\r\n        type: CLEAN_ORDER\r\n    }\r\n}\r\n\r\nexport function createOrderSuccess() {\r\n    return {\r\n        type: CREATE_ORDER\r\n    }\r\n}\r\n\r\nexport function existsOrder() {\r\n    return {\r\n        type: ORDER_EXISTS\r\n    }\r\n}\r\n\r\n\r\nexport function requestGetOrder() {\r\n    return {\r\n        type: GET_ORDER_REQUEST,\r\n    }\r\n}\r\n\r\nexport function receiveGetOrder(item) {\r\n    return {\r\n        type: GET_ORDER_RECEIVE,\r\n        order: item \r\n    }\r\n}\r\n\r\nexport function errorGetOrder(error) {\r\n    return {\r\n        type: GET_ORDER_ERROR,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport function requestCancelOrder() {\r\n    return {\r\n        type: CANCEL_ORDER_REQUEST,\r\n    }\r\n}\r\n\r\nexport function receiveCancelOrder() {\r\n    return {\r\n        type: CANCEL_ORDER_RECEIVE\r\n    }\r\n}\r\n\r\nexport function errorCancelOrder(error) {\r\n    return {\r\n        type: CANCEL_ORDER_ERROR,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport function requestSubmitOrder() {\r\n    return {\r\n        type: SUBMIT_ORDER_REQUEST,\r\n    }\r\n}\r\n\r\nexport function receiveSubmitOrder() {\r\n    return {\r\n        type: SUBMIT_ORDER_RECEIVE\r\n    }\r\n}\r\n\r\nexport function errorSubmitOrder(error) {\r\n    return {\r\n        type: SUBMIT_ORDER_ERROR,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport function createOrder(userId) {\r\n    return (dispatch) => {\r\n\r\n        const order = db.ref('Order');\r\n        \r\n        order.on('value', snapOrders => {\r\n\r\n            var userOrder = order.orderByChild(\"userId\").equalTo(userId);\r\n\r\n            userOrder.once('value', snap => {\r\n\r\n                if (snap.val()) {\r\n                    dispatch(existsOrder());\r\n                } else {\r\n\r\n                    let newOrder = [...snapOrders.val(), {\r\n                            isSubmit: false,\r\n                            userId: userId,\r\n                        }]\r\n\r\n                    order.set(newOrder);\r\n                }\r\n            });\r\n\r\n\r\n        });\r\n\r\n        dispatch(createOrderSuccess());\r\n    }\r\n}\r\n\r\nexport function getOrder(userId) {\r\n    return async (dispatch) => {\r\n        dispatch(requestGetOrder());\r\n\r\n        try {\r\n            \r\n            const order = db.ref('Order');\r\n\r\n            order.orderByChild(\"userId\").equalTo(userId).on(\r\n                'child_added', snap => {\r\n\r\n                    let products = db.ref('Products');\r\n                    \r\n                    products.on('value', productsSnap => {\r\n\r\n                        let data = {\r\n                            ...snap.val(),\r\n                            Products: snap.val()?.Products?.map(productOrder => (\r\n                                productOrder = {\r\n                                    ...productsSnap.val().find(product => productOrder?.productId === product?.id),\r\n                                    count: productOrder.count\r\n                                }\r\n                            ))\r\n                        }\r\n                        dispatch(receiveGetOrder(data));\r\n                    })\r\n\r\n                }\r\n            );\r\n        } catch (error) {\r\n\r\n            dispatch(errorGetOrder(error));\r\n        }\r\n    }\r\n}\r\n\r\nexport function cancelOrder(userId) {\r\n    return async (dispatch) => {\r\n        dispatch(requestCancelOrder());\r\n\r\n        try {\r\n            const order = db.ref('Order');\r\n\r\n            order.orderByChild(\"userId\").equalTo(userId).once(\r\n                'child_added', snap => {\r\n                    if (snap.val()) db.ref('Order/' + snap.key).remove();\r\n                }\r\n            );\r\n\r\n            dispatch(getOrder(userId));\r\n            dispatch(receiveCancelOrder())\r\n\r\n        } catch (error) {\r\n\r\n            dispatch(errorCancelOrder(error));\r\n        }\r\n    }\r\n}\r\n\r\nexport function submitOrder(userId, order) {\r\n    return async (dispatch) => {\r\n        dispatch(requestSubmitOrder());\r\n\r\n        try {\r\n\r\n            // convert your object into a JSON-string\r\n            let jsonString = JSON.stringify(order);\r\n            console.log(jsonString);\r\n            // create a Blob from the JSON-string\r\n            let blob = new Blob([jsonString], { type: \"application/json\" })\r\n\r\n            storage.ref('orders/order ' + userId + '.json').put(blob).on('state_changed', snap => {\r\n                console.log(snap.state);\r\n            });\r\n\r\n           let orderDb =  db.ref('Order');            \r\n\r\n            orderDb.orderByChild(\"userId\").equalTo(userId).once(\r\n                'child_added', snap => {\r\n\r\n                    let newOrder = {\r\n                        ...order,\r\n                        Products: order?.Products.map(product => (\r\n                            product = {\r\n                                productId: product.id,\r\n                                count: product.count\r\n                            })),\r\n                        isSubmit: true\r\n                    }\r\n\r\n                    db.ref('Order/' + snap.key).set(newOrder);\r\n                }\r\n            );\r\n\r\n            dispatch(receiveSubmitOrder())\r\n            dispatch(getOrder(userId))\r\n        } catch (error) {\r\n\r\n            dispatch(errorSubmitOrder(error));\r\n        }\r\n    }\r\n}\r\n\r\n","import {\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_ERROR,\r\n\r\n    LOGOUT_REQUEST,\r\n    LOGOUT_RECEIVE,\r\n    LOGOUT_ERROR,\r\n\r\n}\r\n    from './actionTypes'\r\n\r\nimport firebase from 'firebase/app';\r\nimport \"firebase/auth\";\r\nimport { cleanOrder, createOrder } from './orderAction';\r\n\r\nvar provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n\r\nexport function requestLogin() {\r\n    return {\r\n        type: LOGIN_REQUEST,\r\n    }\r\n}\r\n\r\nexport function successLogin(item) {\r\n    return {\r\n        type: LOGIN_SUCCESS,\r\n        profile: item\r\n\r\n    }\r\n}\r\n\r\nexport function errorLogin(error) {\r\n    return {\r\n        type: LOGIN_ERROR,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport function requsetLogout() {\r\n    return {\r\n        type: LOGOUT_REQUEST\r\n    }\r\n}\r\n\r\nexport function receiveLogout() {\r\n    return {\r\n        type: LOGOUT_RECEIVE\r\n    }\r\n}\r\n\r\nexport function errorLogout() {\r\n    return {\r\n        type: LOGOUT_ERROR\r\n    }\r\n}\r\n\r\nexport function login() {\r\n    return async (dispatch) => {\r\n        dispatch(requestLogin());\r\n\r\n        try {\r\n            \r\n            let response = await firebase.auth().signInWithPopup(provider);\r\n\r\n            dispatch(createOrder(response.additionalUserInfo.profile.id));\r\n\r\n            dispatch(successLogin(response.additionalUserInfo.profile))\r\n\r\n        } catch (error) {\r\n\r\n            dispatch(errorLogin(error));\r\n        }\r\n    }\r\n}\r\n\r\nexport function logout() {\r\n    return async (dispatch) => {\r\n        dispatch(requsetLogout());\r\n\r\n        try {\r\n            firebase.auth().signOut();\r\n\r\n            dispatch(cleanOrder());\r\n            dispatch(receiveLogout());\r\n        } catch (error) {\r\n\r\n            dispatch(errorLogout(error));\r\n        }\r\n    }\r\n}\r\n","import { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport Header from '../Components/Header/Header';\r\nimport { login, logout } from '../Redux/Actions/loginAction';\r\n\r\nconst HeaderContainer = (props) => {\r\n\r\n    return !props.profile? <Header onClick={props.login} /> :\r\n        <Header name={props.profile.name} onClick={props.logout} /> ;\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        profile: state.login.profile\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        login: () => (dispatch(login())),\r\n        logout: () => (dispatch(logout()))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n)(HeaderContainer)","import '../../index.css';\r\n\r\nlet Menu = ({ products, addProduct, userId, isEditMode}) => {\r\n  return (\r\n      <div className=\"Menu  container\">\r\n          <h3>Menu</h3>\r\n          <div className=\"Products\">\r\n          {\r\n\r\n                  products.map((product) => (\r\n                      <div className=\"item Product\" key={product.id}>\r\n                          {product.title}  {product.price}\r\n                          <button  onClick={() => addProduct(userId, product.id)} disabled={!isEditMode || product.isInOrder}>+</button>\r\n                  </div>\r\n              ))\r\n              }\r\n          </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Menu;\r\n ","import {\r\n    ADD_PRODUCT_TO_ORDER_REQUEST,\r\n    ADD_PRODUCT_TO_ORDER_RECEIVE,\r\n    ADD_PRODUCT_TO_ORDER_ERROR,\r\n\r\n    DELETE_PRODUCT_FROM_ORDER_REQUEST,\r\n    DELETE_PRODUCT_FROM_ORDER_RECEIVE,\r\n    DELETE_PRODUCT_FROM_ORDER_ERROR,\r\n\r\n    CHANGE_COUNT_PRODUCT_INTO_ORDER_REQUEST,\r\n    CHANGE_COUNT_PRODUCT_INTO_ORDER_RECEIVE,\r\n    CHANGE_COUNT_PRODUCT_INTO_ORDER_ERROR\r\n} from './actionTypes'\r\n\r\nimport { database as db } from '../../DAL/Firebase';\r\nimport { getOrder } from './orderAction';\r\n\r\nexport function requestAddProduct() {\r\n    return {\r\n        type: ADD_PRODUCT_TO_ORDER_REQUEST,\r\n    }\r\n}\r\n\r\nexport function receiveAddProduct() {\r\n    return {\r\n        type: ADD_PRODUCT_TO_ORDER_RECEIVE\r\n    }\r\n}\r\n\r\nexport function errorAddProduct(error) {\r\n    return {\r\n        type: ADD_PRODUCT_TO_ORDER_ERROR,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport function requestDeleteProduct() {\r\n    return {\r\n        type: DELETE_PRODUCT_FROM_ORDER_REQUEST\r\n    }\r\n}\r\n\r\nexport function receiveDeleteProduct() {\r\n    return {\r\n        type: DELETE_PRODUCT_FROM_ORDER_RECEIVE\r\n    }\r\n}\r\n\r\nexport function errorDeleteProduct(error) {\r\n    return {\r\n        type: DELETE_PRODUCT_FROM_ORDER_ERROR,\r\n        error: error\r\n    }\r\n}\r\n\r\n\r\nexport function requestChangeProductCount() {\r\n    return {\r\n        type: CHANGE_COUNT_PRODUCT_INTO_ORDER_REQUEST\r\n    }\r\n}\r\n\r\nexport function receiveChangeProductCount() {\r\n    return {\r\n        type: CHANGE_COUNT_PRODUCT_INTO_ORDER_RECEIVE\r\n    }\r\n}\r\n\r\nexport function errorChangeProductCount(error) {\r\n    return {\r\n        type: CHANGE_COUNT_PRODUCT_INTO_ORDER_ERROR,\r\n        error: error\r\n    }   \r\n}\r\n\r\n\r\nexport function addProduct(userId, productId) {\r\n    return async (dispatch) => {\r\n        dispatch(requestAddProduct());\r\n\r\n        try {\r\n\r\n            const order = db.ref('Order');\r\n\r\n            let newProduct = {\r\n                productId: productId,\r\n                count: 1\r\n            }\r\n            \r\n            order.orderByChild(\"userId\").equalTo(userId).once(\r\n                'child_added', snap => {\r\n                    \r\n                    let products = db.ref('Order/' + snap.key + '/Products');\r\n\r\n                    products.once('value', snapProducts => {\r\n\r\n                        let newProducts = snapProducts.val() ? [...snapProducts.val(), newProduct] : [newProduct];\r\n\r\n                        db.ref('Order/' + snap.key).child('Products').set(newProducts);\r\n                    });\r\n                }\r\n            );\r\n\r\n            dispatch(receiveAddProduct());\r\n            dispatch(getOrder(userId));\r\n        } catch (error) {\r\n\r\n            dispatch(errorAddProduct(error));\r\n        }\r\n    }\r\n}\r\n\r\nexport function deleteProduct(userId, productId) {\r\n    return async (dispatch) => {\r\n        dispatch(requestDeleteProduct());\r\n\r\n        try {\r\n            const order = db.ref('Order');\r\n            \r\n            order.orderByChild(\"userId\").equalTo(userId).once(\r\n                'child_added', snap => {\r\n                    \r\n                    let products = db.ref('Order/' + snap.key + '/Products');\r\n\r\n                    products.once('value', snapProducts => {\r\n\r\n                        let newProducts = snapProducts.val()?.filter(item => item.productId !== productId);\r\n\r\n                        db.ref('Order/' + snap.key + '/Products').set(newProducts);\r\n                    });\r\n                }\r\n            );\r\n\r\n            dispatch(deleteProduct());\r\n            dispatch(getOrder(userId));\r\n        } catch (error) {\r\n\r\n            dispatch(errorDeleteProduct(error));\r\n        }\r\n    }\r\n}\r\n\r\nexport function changeProductCountIntoOrder(userId, productId, isIncreased) {\r\n    return async (dispatch) => {\r\n        dispatch(requestChangeProductCount());\r\n\r\n        try {\r\n            const order = db.ref('Order');\r\n\r\n            order.orderByChild(\"userId\").equalTo(userId).on(\r\n                'child_added', snap => {\r\n\r\n                    let products = db.ref('Order/' + snap.key + '/Products')\r\n\r\n                    products.once('value', snapProducts => {\r\n\r\n                        let oldProducts = snapProducts.val();\r\n\r\n                        if (oldProducts) {\r\n                            let currentProduct = oldProducts?.filter(item => item.productId === productId);\r\n\r\n                            if ((currentProduct ? currentProduct[0].count === 1 : false) && !isIncreased) { //remove product if hes count could be less then 1\r\n\r\n                                let updateProducts = snapProducts.val()?.filter(item => item.productId !== productId);\r\n\r\n                                db.ref('Order/' + snap.key).child('Products').set(updateProducts);\r\n                            }\r\n                            else { // change count\r\n                                let updateProducts = oldProducts.map(product => (\r\n                                    product.productId === productId ? product = {\r\n                                        ...product,\r\n                                        count: isIncreased ? ++product.count : --product.count\r\n                                    } : product\r\n                                ))\r\n\r\n                                db.ref('Order/' + snap.key + '/Products').set(updateProducts);\r\n                            }\r\n\r\n                            dispatch(receiveChangeProductCount());\r\n                        } else {\r\n                            dispatch(errorChangeProductCount());\r\n                        }\r\n                    });\r\n                }\r\n            );\r\n\r\n            dispatch(getOrder(userId));\r\n        } catch (error) {\r\n\r\n            dispatch(errorChangeProductCount(error));\r\n        }\r\n    }\r\n}\r\n\r\n","import {\r\n    GET_PRODUCTS_REQUEST,\r\n    GET_PRODUCTS_RECEIVE,\r\n    GET_PRODUCTS_ERROR\r\n}from './actionTypes'\r\n\r\nimport { database as db } from '../../DAL/Firebase';\r\n\r\nlet requestProducts = () => {\r\n    return {\r\n        type: GET_PRODUCTS_REQUEST\r\n    }\r\n}\r\n\r\nexport function receiveProducts(item) {\r\n    return {\r\n        type: GET_PRODUCTS_RECEIVE,\r\n        products: item\r\n    }\r\n}\r\n\r\nexport function errorProducts(error) {\r\n    return {\r\n        type: GET_PRODUCTS_ERROR,\r\n        error: error\r\n    }\r\n}\r\n\r\n\r\nexport function getProducts() {\r\n    return async (dispatch) => {\r\n        \r\n        dispatch(requestProducts());\r\n\r\n        try {\r\n            const products = db.ref('Products');\r\n\r\n            products.on('value', (elem) => dispatch(receiveProducts(elem.val())));\r\n            \r\n        } catch (error) {\r\n            dispatch(errorProducts(error));\r\n        }\r\n    }\r\n}\r\n","import { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport Menu from '../Components/Menu/Menu';\r\nimport { addProduct } from '../Redux/Actions/productAction';\r\nimport { getProducts } from '../Redux/Actions/productsAction';\r\n\r\nconst MenuContainer = (props) => {\r\n\r\n    let [isLogin, setIsLogin] = useState(false);\r\n    let [products, setProducts] = useState(props.products);\r\n\r\n    useEffect(() => {\r\n        setProducts(props.products);\r\n    }, [props.products]);\r\n\r\n    useEffect(() => {\r\n\r\n        let newProducts = products?.map(product => (\r\n            product = {\r\n                ...product,\r\n                isInOrder: props.order?.Products?.find(orderProduct => orderProduct.id === product.id) ? true : false \r\n            }));\r\n\r\n        setProducts(newProducts);\r\n    }, [props.order]);\r\n\r\n    useEffect(() => {\r\n        props.getProducts();\r\n        setIsLogin(props.profile ? true : false);\r\n    }, [props.profile]);\r\n\r\n    const menu = () => <Menu products={products} addProduct={props.addProduct} userId={props.profile ? props.profile.id : 0} isEditMode={isLogin} />;\r\n\r\n    const loading = () => <>Loading</>;\r\n\r\n    return !products ? loading() : menu();\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        products: state.products.products,\r\n        order: state.order.order,\r\n        profile: state.login.profile\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addProduct: (userId, productId) => (dispatch(addProduct(userId, productId))),\r\n        getProducts: () => dispatch(getProducts()),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n)(MenuContainer)","import '../../index.css';\r\n\r\nlet Order = (props) => {\r\n\r\n  return (\r\n      <div className=\"Order container\">\r\n\r\n          <h3>Order</h3>\r\n\r\n          <div >\r\n              {\r\n                  props.order?.Products ? props.order.Products.map(product => (\r\n                      <div className=\"item Product\" key={product.id}>\r\n                          <button onClick={() => props.deleteProduct(props.profile.id, product.id)} disabled={props.order?.isSubmit}>x</button>\r\n                          \r\n                          {product.title}\r\n\r\n                          <button onClick={() => props.changeCount(props.profile.id, product.id, false)} disabled={props.order?.isSubmit}>-</button>\r\n                          {product.count}\r\n                          <button onClick={() => props.changeCount(props.profile.id, product.id, true)} disabled={props.order?.isSubmit}>+</button>\r\n\r\n                          {product.price}\r\n\r\n                      </div>\r\n                  )) : <div className=\"item Product\">Empty</div>\r\n              }\r\n              <div className=\"item Product\">Total : {props.totalPrice}</div>\r\n              <div className=\"item\">\r\n                  <button\r\n                      onClick={() => props.cancelOrder(props.profile.id)}\r\n                      disabled={!props.isEditMode || props.order?.isSubmit}>\r\n                      Cancel </button>\r\n                  <button\r\n                      onClick={() => props.submitOrder(props.profile.id, props.order)}\r\n                      disabled={!props.isEditMode || props.order?.isSubmit}>\r\n                      Submit </button>\r\n              </div>\r\n          </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Order;\r\n","import { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport Order from '../Components/Order/Order';\r\nimport { cancelOrder,  getOrder, submitOrder } from '../Redux/Actions/orderAction';\r\nimport { changeProductCountIntoOrder, deleteProduct} from '../Redux/Actions/productAction';\r\n\r\nimport '../index.css';\r\n\r\n\r\nconst OrderContainer = (props) => {\r\n\r\n    let [order, setOrder] = useState(props.order);\r\n\r\n    useEffect(() => {\r\n        setOrder(props.order);\r\n    }, [props.order]);\r\n\r\n    let [totalPrice, setTotalPrice] = useState(0);\r\n\r\n    useEffect(() => {\r\n        let total = 0;\r\n        order?.Products?.map(product => (\r\n            total += product.count * product.price\r\n        ));\r\n        setTotalPrice(total);\r\n    }, [order?.Products]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (props.profile ? true : false) props.getOrder(props.profile.id);\r\n    }, [props.profile]);\r\n\r\n    const orderComplete = () => {\r\n        return <div className=\"congratulation\">\r\n            <div className=\"item Product\">Thank you for complete order. The total cost is {totalPrice} tugrikow.</div>\r\n            <button className=\"item Product\" onMouseEnter={() => alert(\"*coming soon*\")}>Make a new order</button>\r\n        </div>\r\n    }\r\n\r\n    const orderComponent = () => {\r\n        return <Order order={order} totalPrice={totalPrice}\r\n            submitOrder={props.submitOrder} cancelOrder={props.cancelOrder}\r\n            changeCount={props.changeCount} deleteProduct={props.deleteProduct}\r\n            isEditMode={props.profile ? true : false} profile={props.profile}/>\r\n    }\r\n\r\n    return order?.isSubmit ? orderComplete() : orderComponent();\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        order: state.order.order,\r\n        profile: state.login.profile\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        submitOrder: (userId, order) => dispatch(submitOrder(userId, order)),\r\n        cancelOrder: (userId) => dispatch(cancelOrder(userId)),\r\n        getOrder: (userId) => dispatch(getOrder(userId)),\r\n        changeCount: (userId, productId, isIncreased) => dispatch(changeProductCountIntoOrder(userId, productId, isIncreased)),\r\n        deleteProduct: (userId, productId) => dispatch(deleteProduct(userId, productId))\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n)(OrderContainer)","import HeaderContainer from '../Containers/HeaderContainer';\r\nimport MenuContainer from '../Containers/MenuContainer';\r\nimport OrderContainer from '../Containers/OrderContainer';\r\n\r\nfunction App() {\r\n  return (\r\n      <div className=\"App\">\r\n          <HeaderContainer />\r\n          <div className=\"Body container\">\r\n              <MenuContainer />\r\n              <OrderContainer />\r\n          </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","//import { useEffect } from 'react';\r\n//import { connect } from 'react-redux'\r\n//import { compose } from 'redux'\r\nimport App from '../Components/App';\r\n\r\nconst AppContainer = (props) => {\r\n\r\n    return <App />;\r\n}\r\n\r\nexport default AppContainer","import {\r\n    LOGIN_REQUEST,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_ERROR,\r\n\r\n    LOGOUT_REQUEST,\r\n    LOGOUT_RECEIVE,\r\n    LOGOUT_ERROR,\r\n} from '../Actions/actionTypes'\r\n\r\n\r\nconst initialState = {}\r\n\r\n\r\nexport default function loginReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case LOGIN_REQUEST:\r\n            return {\r\n                ...state\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        case LOGIN_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        case LOGOUT_REQUEST:\r\n            return {\r\n                ...state\r\n            }\r\n        case LOGOUT_RECEIVE:\r\n            return {\r\n                profile: null\r\n            }\r\n        case LOGOUT_ERROR:\r\n            return {\r\n                error: action.error\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    GET_ORDER_REQUEST,\r\n    GET_ORDER_RECEIVE,\r\n    GET_ORDER_ERROR,\r\n\r\n    CANCEL_ORDER_REQUEST,\r\n    CANCEL_ORDER_RECEIVE,\r\n    CANCEL_ORDER_ERROR,\r\n\r\n    SUBMIT_ORDER_REQUEST,\r\n    SUBMIT_ORDER_RECEIVE,\r\n    SUBMIT_ORDER_ERROR,\r\n    CLEAN_ORDER,\r\n    CREATE_ORDER,\r\n    ORDER_EXISTS\r\n} from '../Actions/actionTypes'\r\n\r\n\r\nconst initialState = []\r\n\r\n\r\nexport default function orderReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case CLEAN_ORDER:\r\n            return {\r\n                order: null\r\n            }\r\n        case CREATE_ORDER:\r\n            return {\r\n                ...state\r\n            }\r\n        case ORDER_EXISTS:\r\n            return {\r\n                ...state\r\n            }\r\n        case GET_ORDER_REQUEST:\r\n            return {\r\n                ...state\r\n            }\r\n        case GET_ORDER_RECEIVE:\r\n            return {\r\n                ...state,\r\n                order: action.order\r\n            }\r\n        case GET_ORDER_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        case CANCEL_ORDER_REQUEST:\r\n            return {\r\n                ...state\r\n            }\r\n        case CANCEL_ORDER_RECEIVE:\r\n            return {\r\n                ...state\r\n            }\r\n        case CANCEL_ORDER_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        case SUBMIT_ORDER_REQUEST:\r\n            return {\r\n                ...state\r\n            }\r\n        case SUBMIT_ORDER_RECEIVE:\r\n            return {\r\n                ...state\r\n            }\r\n        case SUBMIT_ORDER_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    ADD_PRODUCT_TO_ORDER_REQUEST,\r\n    ADD_PRODUCT_TO_ORDER_RECEIVE,\r\n    ADD_PRODUCT_TO_ORDER_ERROR,\r\n\r\n    DELETE_PRODUCT_FROM_ORDER_REQUEST,\r\n    DELETE_PRODUCT_FROM_ORDER_RECEIVE,\r\n    DELETE_PRODUCT_FROM_ORDER_ERROR,\r\n\r\n    CHANGE_COUNT_PRODUCT_INTO_ORDER_REQUEST,\r\n    CHANGE_COUNT_PRODUCT_INTO_ORDER_RECEIVE,\r\n    CHANGE_COUNT_PRODUCT_INTO_ORDER_ERROR\r\n} from '../Actions/actionTypes'\r\n\r\n\r\nconst initialState = {}\r\n\r\n\r\nexport default function productReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case ADD_PRODUCT_TO_ORDER_REQUEST:\r\n            return {\r\n                ...state\r\n            }\r\n        case ADD_PRODUCT_TO_ORDER_RECEIVE:\r\n            return {\r\n                ...state\r\n            }\r\n        case ADD_PRODUCT_TO_ORDER_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        case DELETE_PRODUCT_FROM_ORDER_REQUEST:\r\n            return {\r\n                ...state\r\n            }\r\n        case DELETE_PRODUCT_FROM_ORDER_RECEIVE:\r\n            return {\r\n                ...state\r\n            }\r\n        case DELETE_PRODUCT_FROM_ORDER_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        case CHANGE_COUNT_PRODUCT_INTO_ORDER_REQUEST:\r\n            return {\r\n                ...state\r\n            }\r\n        case CHANGE_COUNT_PRODUCT_INTO_ORDER_RECEIVE:\r\n            return {\r\n                ...state\r\n            }\r\n        case CHANGE_COUNT_PRODUCT_INTO_ORDER_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    GET_PRODUCTS_REQUEST,\r\n    GET_PRODUCTS_RECEIVE,\r\n    GET_PRODUCTS_ERROR\r\n} from '../Actions/actionTypes'\r\n\r\n\r\nconst initialState =[]\r\n\r\n\r\nexport default function productsReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_PRODUCTS_REQUEST:\r\n            return {\r\n                ...state\r\n            }\r\n        case GET_PRODUCTS_RECEIVE:\r\n            return {\r\n                ...state,\r\n                products: action.products\r\n            }\r\n        case GET_PRODUCTS_ERROR:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport loginReducer from './loginReducer';\r\nimport orderReducer from './orderReducer';\r\nimport productReducer from './productReducer';\r\nimport productsReducer   from './productsReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    products: productsReducer,\r\n    product: productReducer,\r\n    order: orderReducer,\r\n    login: loginReducer,\r\n});\r\n\r\nexport default rootReducer;","import { render } from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport AppContainer from './Containers/AppContainer';\r\nimport configureStore from './Redux/Store';\r\n\r\n\r\nconst store = configureStore();\r\n\r\nwindow.store = store;\r\n\r\nrender(\r\n    <Provider store={store}>\r\n        <AppContainer />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)\r\n","import thunkMiddleware from 'redux-thunk'\r\nimport { createLogger } from 'redux-logger'\r\nimport { createStore, applyMiddleware } from 'redux'\r\nimport rootReducer from '../Reducers'\r\n\r\nexport default function configureStore(initialState) {\r\n    const loggerMiddleware = createLogger()\r\n    const store = createStore(\r\n        rootReducer,\r\n        applyMiddleware(\r\n            thunkMiddleware,\r\n            loggerMiddleware\r\n        )\r\n    )\r\n    return store\r\n}\r\n"],"sourceRoot":""}